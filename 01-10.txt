오버라이딩 -> 부모클래스에 메소드를 자식메소드에서 다시 써서 재정의 할 수 있다. -> 덮어 쓰기 개념
(부모클래스 메소드 무시 가능)부모클래스 메소드보다 우선 실행

오버로딩 -> 동명 메소드 매개변수 type/길이에 따라 여러개 쓸 수 있다.(다형성)
->오버로딩을 써버리면 반드시 추상적메소드가 부모에 존재해야한다.!!!!!!!!

if 문에 파라미터에 메소드를 쓸때 그 조건이 거짓이어도 일단은 메소드는 실행이 된다. -> 메소드가 실행 되는 경로중 하나

<-------추상 메소드------>
추상 메소드를 쓸려고 하면 클래스도 추상 클래스여야 한다.
abstrack
추상 클래스는 실체가 없기에 메인에서 인스턴스로 복제를 하지 못한다-> 상속이 없으면 의미가 없다!!

<-----인터페이스------>
인터페이스 자체는 애초에 추상 메소드를 지원하기에 abstrack을 안쓴다.!!-> 가상의 틀 그자체!!!
->일반 메소드는 default를 쓰고 시작한다.
->인터페이스에서 필드를 선언 할 수 없다. -> 연결만 해주기 때문이다.
->인터페이스는 객체끼리 같은 메소드명을 공유하게 해준다. -> 인터페이스는 지침서(규약) 이다. -> 장점

상수필드 -> 고정값
추상메소드->매개값
디폴트 메소드-> 자식 클래스가 사용할 수있음
정적 메소드 -> 인스턴스 객체를 만들지 않아도 인터페이스에 확장자로 메소드를 사용할 수 있다.


